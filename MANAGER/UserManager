using MANAGER.Services;
using static MODEL.UserModel;

namespace MANAGER.Managers
{
    public class UserManager : IUserService
    {
        //Temporary data for testing before database connections
        private readonly List<User> _users = new List<User>
        {
            new User { Id = 1, FirstName = "John", LastName = "Doe", Course = "Computer Science" },
            new User { Id = 2, FirstName = "Jane", LastName = "Smith", Course = "Information Technology" }
        };

        //Function that displays all students within the list
        public IEnumerable<User> GetAllUser()
        {
            return _users;
        }
        //Function to display the details of the student if there is a matching Id
        public User GetUserById(int id)
        {
            return _users.FirstOrDefault(s => s.Id == id);
        }
        //Function that displays adds a students to the list
        public void AddUser(User user)
        {
            user.Id = _users.Max(s => s.Id) + 1;
            _users.Add(user);
        }
        //Function that update a student's information if it exists
        public void UpdateUser(int id, User user)
        {
            var existingUser = _users.FirstOrDefault(s => s.Id == id);
            if (existingUser != null)
            {
                existingUser.FirstName = user.FirstName;
                existingUser.LastName = user.LastName;
                existingUser.Course = user.Course;
            }
        }
        //Function that deletes a student from the list
        public void DeleteUser(int id)
        {
            var user = _users.FirstOrDefault(s => s.Id == id);
            if (user != null)
            {
                _users.Remove(user);
            }
        }
    }
}
